# NOTE: This workflow is overkill for most R packages
# check-standard.yaml is likely a better choice
# usethis::use_github_action("check-standard") will install it.
#
# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.bioc }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, r: '4.2', bioc: '3.16', cont: "bioconductor/bioconductor_docker:RELEASE_3_16", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
          - { os: macOS-latest, r: '4.2', bioc: '3.16'}
          - { os: windows-latest, r: '4.2', bioc: '3.16'}
          #- {os: macOS-latest,   r: '4.2', bioc: '3.15'}
          # temporarily commented: rtracklayer installation failing causes error
          #- {os: ubuntu-latest,   r: '4.2', bioc: '3.15'}
          #- {os: windows-latest, r: '4.2', bioc: '3.15'}
          #- { os: ubuntu-20.04, r: 'devel', bioc: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
          #- {os: ubuntu-latest,   r: 'release', bioc: 'devel'}
          #- {os: ubuntu-latest,   r: 'oldrel-1', bioc: 'devel'}
            # forking unavailable on windows, hence temporarily commented
            #- {os: windows-latest, r: 'release'}
            #- {os: windows-latest, r: '3.6'}
            # old entries, commented on 17-Mar-2022
            #- {os: ubuntu-16.04,   r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", http-user-agent: "R/4.0.0 (ubuntu-16.04) R (4.0.0 x86_64-pc-linux-gnu x86_64 linux-gnu) on GitHub Actions" }
            #- {os: ubuntu-16.04,   r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
            #- {os: ubuntu-16.04,   r: 'oldrel',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
            #- {os: ubuntu-16.04,   r: '3.6',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
            #- {os: ubuntu-16.04,   r: '4.0',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
            #- {os: ubuntu-16.04,   r: '3.3',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - name: Set BiocManager version
        if: matrix.config.image == null
        run: |
          install.packages('BiocManager')
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        shell: Rscript {0}

      - name: Install Python
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_github('rstudio/reticulate')"
          Rscript -e "reticulate::install_miniconda()"
          Rscript -e "reticulate::conda_create('r-reticulate', packages = c('python=3.5', 'numpy', 'scipy', 'scikit-learn', 'packaging'))"


      - uses: r-lib/actions/setup-pandoc@v1

        # On Linux, installing these system libraries is required for some pkgs such as DirichletMultinomial
      - name: Install system libraries
        if: runner.os == 'Linux'
        run: sudo apt-get install libnlopt-dev ghostscript libcurl4-openssl-dev libgsl0-dev -f

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ steps.install-r.outputs.installed-r-version }}-3-

      - name: Install pak
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
        shell: Rscript {0}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: Rscript -e 'pak::local_system_requirements(execute = TRUE)'

      # local_install_deps should avoid installing DirichletMultinomial --> TFBSTools which is in Suggests field in DESCRIPTION
      # switching back to dev_deps so that knitr will be installed for building vignette
      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: BiocCheck
        run: |
          BiocManager::install("BiocCheck")
          BiocCheck::BiocCheck(".")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest'
        run: |
          install.packages("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}
